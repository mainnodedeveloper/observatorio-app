import '@angular/compiler';
import '@angular/platform-server/init';
import 'zone.js/node';
import { Component, ImportProvidersSource, InjectionToken, Provider, Type } from '@angular/core';
import { XhrFactory } from '@angular/common';
export declare class ServerXhr implements XhrFactory {
    build(): XMLHttpRequest;
}
export declare const SSR_PAGE_PROPS: InjectionToken<{
    pageProps: Record<string, unknown>;
    page: Type<{}> | null;
    layout: Type<{}> | null;
}>;
export declare const SSR_PAGE_PROPS_HOOK_PROVIDER: Provider;
export interface RenderToStringOptions<T = any, U = any> extends Pick<Component, 'selector'> {
    imports?: ImportProvidersSource;
    providers?: Provider[];
    page: Type<T>;
    layout?: Type<U>;
    pageContext?: {
        pageProps?: any;
        req?: any;
        res?: any;
        urlOriginal?: string;
    };
    document?: string;
    serverUrl?: string;
    indexHtml?: boolean;
    root?: string;
    url?: string;
}
export declare const renderToString: <T, U>({ page, layout, pageContext, providers, imports, document, serverUrl, indexHtml, root, selector, url, }: RenderToStringOptions<T, U>) => Promise<string>;
